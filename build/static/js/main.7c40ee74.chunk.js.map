{"version":3,"sources":["components/navbar.jsx","components/customers.jsx","components/notFound.jsx","components/rentals.jsx","services/fakeMovieService.js","components/movies.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","Link","to","Component","Customers","NotFound","Rentals","movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","Movies","state","handleDelete","movie","_this","filter","m","setState","_this2","this","count","length","className","map","key","onClick","App","navbar","Switch","Route","path","component","Redirect","from","exact","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c40ee74.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Movies</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/customers\">Customers</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/rentals\">Rentals</Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\n\nclass Customers extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Customers</h1>\n            </div>\n        );\n    }\n}\n\nexport default Customers;","import React, {Component} from 'react';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Not Found</h1>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React, {Component} from 'react';\n\nclass Rentals extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Rentals</h1>\n            </div>\n        );\n    }\n}\n\nexport default Rentals;","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, {Component} from 'react';\nimport {getMovies} from \"../services/fakeMovieService\";\n\nclass Movies extends Component {\n\n    state = {\n        movies: getMovies()\n    };\n\n    handleDelete = (movie) => {\n        const movies = this.state.movies.filter(m => m._id !== movie._id);\n        this.setState({movies});\n    };\n\n    render() {\n\n        const {length: count} = this.state.movies;\n\n        if(count === 0) return <p> There are no movies in the database.</p>;\n        return (\n\n            <div>\n                <p>Showing {count} movies in the database.</p>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Genre</th>\n                        <th>Stock</th>\n                        <th>Rate</th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.movies.map(movie => (\n                        <tr key={movie._id}>\n                        <td>{movie.title}</td>\n                        <td>{movie.genre.name}</td>\n                        <td>{movie.numberInStock}</td>\n                        <td>{movie.dailyRentalRate}</td>\n                        <td><button onClick={() => this.handleDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button></td>\n                    </tr>))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Movies;","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport Customers from './components/customers';\nimport NotFound from './components/notFound';\nimport Rentals from './components/rentals';\nimport Movies from \"./components/movies\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <NavBar/>\n        <main className=\"container\">\n            <Switch>\n                <Route path=\"/movies\" component={Movies} />\n                <Route path=\"/customers\" component={Customers}/>\n                <Route path=\"/rentals\" component={Rentals} />\n                <Route path=\"/not-found\" component={NotFound} />\n                <Redirect from=\"/\" exact to=\"/movies\" />\n                <Redirect to=\"/not-found\" />\n            </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}